# import Artist from "./generated/prisma.graphql"

type Query {
	artists(filter: String!): [Artist]
	users: [User!]!
	albums: [Album!]!
	scores: [Score!]!
	artist: Artist!
	album: Album!
	score: Score!
	user: User
	searchArtists(filter: String!): [Artist]
}


type Mutation {
	newArtist(name: String!, description: String!, image: String!): Artist!
	signup(email: String!, password: String!, name: String!): AuthPayload
	login(email: String!, password: String!): AuthPayload
	newAlbum(name: String!, artistName: String!): Album!
	newScore(amount: Int!, category: String!, name: String!, email: String!): Score!
	updateArtist(id: ID!, name: String, age: Int, description: String, image: String): Artist!
	addTopArtist(id: ID!, email: String!): User!
	removeTopArtist(id: ID!, email: String!): User!
	updateTopArtist(id: ID!, email: String!): User!
	updateScore(amount: Int!, category: String!, name: String!, email: String!): Score!
}


type Album {
	id: ID!
	name: String!
	releaseDate: String
	artist: Artist!
}


type Score {
	id: ID!
	category: String!
	amount: Int!
	artist: Artist!
	user: User
}

type AuthPayload {
	token: String
	user: User
}

type User {
	id: ID!
	name: String!
	email: String!
	artists: [Artist!]!
	scores: [Score]
}
